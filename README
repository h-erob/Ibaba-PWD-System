# Membership and Attendance Tracking System

A Java + MySQL-based system to manage demographic records, track monthly attendance, and monitor membership validity for community members.

> ⚠️ **Note:** This program is currently under development.
> There is **no executable `.jar` file** included.
> It is **recommended to open and run the program through IntelliJ IDEA** for full functionality.

---

## 📂 Project Structure

- `src/` – Java source files
- `pwdCares_MockData.sql` – MySQL schema + sample/mock data *(used both for structure and sample data)*

---

## 🛠️ Features

- Member registration with complete demographic and household information
- Medical history and medication tracking
- Attendance tracking per member per day
- Yearly attendance summaries
- Membership status tracking (`Expired`, `Renewed`, `Deceased`, `Alive`)
- ID validity checks and renewal system
- Auto-initialization of the database (no need for manual SQL imports)
- Default admin account created on first run

---

## 🗃️ Database Schema

The system auto-generates the database and tables via `DatabaseInitializer.java`.
If you prefer manual setup or mock data, use the `pwdCares.sql` script.

### Tables:
- `admins` – Admin login credentials
- `members` – Main profile sheet
- `members_household` – Family composition
- `members_conditions` – Health conditions (checkboxes)
- `members_medications` – Up to 15 meds per member
- `attendance` – Per date member attendance

---

## 💾 Default Database Credentials

The system uses the following default MySQL credentials:

- **Username**: `root`
- **Password**: `1234`

> 🔧 **Custom MySQL Setup?**
> If your local MySQL username/password differs, open `src/db/database.java` and update:
```java
private static final String USERNAME = "your_mysql_username";
private static final String PASSWORD = "your_mysql_password";

---

## ⚙️ Java Setup Instructions

### 1. Prerequisites
- Java 8 or higher (Java 24 recommended)
- IntelliJ IDEA (recommended for editing and running the system)
- MySQL Server (MySQL Workbench is optional)

### 2. Running the Program
- Clone the project and open it in IntelliJ
- Insert the default admin user:
   Username: admin
   Password: 1234

---

## 🧪 Importing Mock Data (Optional)

⚠️ This step is optional if you're using the auto-initializer.
It is helpful for previewing existing sample data during development.

1. Open MySQL Workbench
2. Go to Server > Data Import
3. Choose Import from Self-Contained File
   - Select pwdCares_MockData.sql
4. Target Schema: membership_system
5. Click Start Import

---

## 📌 Usage Notes
- `status`, `civilStatus`,and `sex` columns are `ENUM`, synced with GUI dropdowns
- Attendance dropdown is dynamically populated from distinct attendance years
- Only one attendance record can be added per member per day
- Auto-expiration and renewal logic are handled in SQL or Java
- Editing and deleting member data respects foreign key constraints

## 📬 Feedback
Pull requests, bug reports, and feature suggestions are welcome!
